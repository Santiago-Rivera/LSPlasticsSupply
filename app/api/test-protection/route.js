import { NextResponse } from 'next/server';

/**
 * Ruta de Prueba - Sistema de Protecci√≥n
 * Esta ruta simula una operaci√≥n de modificaci√≥n que deber√≠a estar protegida
 */

export async function POST(request) {
    try {
        const body = await request.json();
        
        // Si llegamos aqu√≠, significa que el sistema de protecci√≥n permiti√≥ el acceso
        return NextResponse.json({
            success: true,
            message: '‚úÖ PRUEBA EXITOSA - El sistema de protecci√≥n est√° funcionando correctamente',
            data: {
                testType: 'Modificaci√≥n simulada',
                timestamp: new Date().toISOString(),
                authorizedUser: 'Santiago',
                requestBody: body
            }
        });
        
    } catch (error) {
        return NextResponse.json({
            success: false,
            message: '‚ùå Error en la prueba',
            error: error.message
        }, { status: 500 });
    }
}

export async function GET() {
    return NextResponse.json({
        message: 'üß™ Endpoint de Prueba del Sistema de Protecci√≥n',
        status: 'Activo',
        description: 'Esta ruta est√° protegida y requiere autenticaci√≥n',
        owner: 'Santiago',
        project: 'L&S Plastics Supply'
    });
}

export async function PUT(request) {
    // Operaci√≥n de actualizaci√≥n simulada
    const body = await request.json();
    
    return NextResponse.json({
        success: true,
        message: '‚úÖ PRUEBA PUT EXITOSA - Modificaci√≥n autorizada',
        operation: 'UPDATE',
        data: body,
        timestamp: new Date().toISOString()
    });
}

export async function DELETE() {
    // Operaci√≥n de eliminaci√≥n simulada
    return NextResponse.json({
        success: true,
        message: '‚úÖ PRUEBA DELETE EXITOSA - Eliminaci√≥n autorizada',
        operation: 'DELETE',
        timestamp: new Date().toISOString()
    });
}
